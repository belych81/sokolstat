# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'ru'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    admin.player:
        class: App\Admin\PlayerAdmin
        arguments: [~, App\Entity\Player, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Player }

    admin.ecsostav:
        class: App\Admin\EcsostavAdmin
        arguments: [~, App\Entity\Ecsostav, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Ecsostav }

    admin.eurocup:
        class: App\Admin\EurocupAdmin
        arguments: [~, App\Entity\Eurocup, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Eurocup }

    admin.country:
        class: App\Admin\CountryAdmin
        arguments: [~, App\Entity\Country, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Country }

    admin.ectable:
        class: App\Admin\EctableAdmin
        arguments: [~, App\Entity\Ectable, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Ectable }

    admin.gamers:
        class: App\Admin\GamersAdmin
        arguments: [~, App\Entity\Gamers, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Gamers }

    admin.cupplayer:
        class: App\Admin\CupplayerAdmin
        arguments: [~, App\Entity\Cupplayer, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Cupplayer }

    admin.fnlplayer:
        class: App\Admin\FnlplayerAdmin
        arguments: [~, App\Entity\Fnlplayer, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Fnlplayer }

    admin.ecplayer:
        class: App\Admin\EcplayerAdmin
        arguments: [~, App\Entity\Ecplayer, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Ecplayer }
